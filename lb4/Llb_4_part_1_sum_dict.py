# TODO решите задачу
# Создем лямбда функцию, к которой в последствии можно обрщаться для искомых вычислений
# Символ «->» в определении функций Python используется для указания
# ожидаемого типа возвращаемого значения. Это называется «аннотацией типов».
# Это не влияет на выполнение функции, но может быть полезно для разработчиков для
# понимания, какой тип данных ожидается в качестве возвращаемого значения функции.
def task() -> float:
    file_path = "input.json"   # если задать file_path так,
    # то для правильного вывода ответа необходимо задать print как в строке 27
    # если задать file_path внутри task(), то для правильного вывода ответа
    # необходимо задать print как в строке 26
    import json
    with open(file_path, 'r') as file:  # считывание файла, использование with
        # Для явного указания места работы с файлом, а также чтобы не забывать
        # закрыть файл после обработки, существует менеджер контекста with.

        # Менеджер контекста неявно вызывает закрытие файла после работы.
        # Что освобождает вас от забот о том, закрыли ли вы файл или нет.
        #
        # Закрытие файла происходит при любом стечении обстоятельств,
        # даже если внутри with будет ошибка.
        data = json.load(file)

    total_sum = 0
    for item in data:
        total_sum += item["score"] * item["weight"]

    return round(total_sum, 3)


# Пример использования
#result = task('input.json')
#print(result)  # Вывод
#print(task('input.json'))
print(task())
