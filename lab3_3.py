
# Задаем разбираемый текст
main_str = """      
У лукоморья дуб зелёный;
Златая цепь на дубе том:
И днём и ночью кот учёный
Всё ходит по цепи кругом;
Идёт направо — песнь заводит,
Налево — сказку говорит.
Там чудеса: там леший бродит,
Русалка на ветвях сидит;
Там на неведомых дорожках
Следы невиданных зверей;
Избушка там на курьих ножках
Стоит без окон, без дверей;
Там лес и дол видений полны;
Там о заре прихлынут волны
На брег песчаный и пустой,
И тридцать витязей прекрасных
Чредой из вод выходят ясных,
И с ними дядька их морской;
Там королевич мимоходом
Пленяет грозного царя;
Там в облаках перед народом
Через леса, через моря
Колдун несёт богатыря;
В темнице там царевна тужит,
А бурый волк ей верно служит;
Там ступа с Бабою Ягой
Идёт, бредёт сама собой,
Там царь Кащей над златом чахнет;
Там русский дух… там Русью пахнет!
И там я был, и мёд я пил;
У моря видел дуб зелёный;
Под ним сидел, и кот учёный
Свои мне сказки говорил.
"""

# Создаем функцию count_letter
def count_letters(main_str):
    letter_count = {}                   # пустой словарь
    for char in main_str.lower():       # цикл перебора знчений текста при нижнем регистре всех элементов текста
        if char.isalpha():              # проверка является ли символ буквой
            if char in letter_count:    # подсчет колчества букв
                letter_count[char] += 1
            else:
                letter_count[char] = 1
    return letter_count

# Создаем функцию calculate_frequency
def calculate_frequency(letter_count):
    total_count = sum(letter_count.values())                    # Сумма всех букв текста
    frequency = {}                                              # пустой словарь
    for letter, count in letter_count.items():
        frequency[letter] = round(count / total_count, 2)       # округление с точностью до 2 знков после запятой
    return frequency

words = count_letters(main_str)
frequency = calculate_frequency(words)

for letter, freq in frequency.items():
    print(letter + ": " + str(freq))


    # Var 2
    # main_str = """
    # У лукоморья дуб зелёный;
    # Златая цепь на дубе том:
    # И днём и ночью кот учёный
    # Всё ходит по цепи кругом;
    # Идёт направо — песнь заводит,
    # Налево — сказку говорит.
    # Там чудеса: там леший бродит,
    # Русалка на ветвях сидит;
    # Там на неведомых дорожках
    # Следы невиданных зверей;
    # Избушка там на курьих ножках
    # Стоит без окон, без дверей;
    # Там лес и дол видений полны;
    # Там о заре прихлынут волны
    # На брег песчаный и пустой,
    # И тридцать витязей прекрасных
    # Чредой из вод выходят ясных,
    # И с ними дядька их морской;
    # Там королевич мимоходом
    # Пленяет грозного царя;
    # Там в облаках перед народом
    # Через леса, через моря
    # Колдун несёт богатыря;
    # В темнице там царевна тужит,
    # А бурый волк ей верно служит;
    # Там ступа с Бабою Ягой
    # Идёт, бредёт сама собой,
    # Там царь Кащей над златом чахнет;
    # Там русский дух… там Русью пахнет!
    # И там я был, и мёд я пил;
    # У моря видел дуб зелёный;
    # Под ним сидел, и кот учёный
    # Свои мне сказки говорил.
    # """
    #
    #
    # def count_letters(main_str):
    #     alphabet = ['а', 'б', 'в', 'г', 'д', 'е', 'ё', 'ж', 'з', 'и', 'й', 'к', 'л', 'м', 'н', 'о',
    #                 'п', 'р', 'с', 'т', 'у', 'ф', 'х', 'ц', 'ч', 'ш', 'щ', 'ъ', 'ы', 'ь', 'э', 'ю', 'я']
    #     num_words_small = list(range(1, 34))
    #     main_str = main_str.lower()
    #     for i in range(len(alphabet)):
    #         num_words_small[i] = main_str.count(alphabet[i])
    #     num_words = dict(zip(alphabet, num_words_small))
    #     return num_words
    #
    #
    # def calculate_frequency(letter_count):
    #     total_count = sum(letter_count.values())
    #     frequency = {}
    #     for letter, count in letter_count.items():
    #         frequency[letter] = round(count / total_count, 2)
    #     return frequency
    #
    #
    # fric = (count_letters(main_str))
    #
    # for key, value in fric.items():
    #     print("{0}: {1}".format(key, value))